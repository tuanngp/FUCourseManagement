@using FUCourseManagement.Helpers
@model IEnumerable<object>
@{
    var properties = new List<System.Reflection.PropertyInfo>();
    if (Model != null && Model.Any())
    {
        var type = Model.First().GetType();
        // Lọc các thuộc tính cần hiển thị
        properties = type.GetProperties()
            .Where(p => !p.Name.Contains("Collection") && // Loại bỏ collection navigation
                       !p.PropertyType.IsGenericType && // Loại bỏ generic types
                       !p.Name.EndsWith("Navigation") && // Loại bỏ navigation markers
                       !p.Name.Contains("Password")) // Loại bỏ thông tin nhạy cảm
            .ToList();
    }
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Danh sách @ViewData["Title"]</h3>
        <div class="card-tools">
            <div class="input-group input-group-sm" style="width: 250px;">
                <input type="text" id="search-box" class="form-control float-right" placeholder="Tìm kiếm...">
                <div class="input-group-append">
                    <button type="button" class="btn btn-default" id="search-btn">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body table-responsive p-0">
        <table class="table table-hover text-nowrap" id="data-table">
            <thead>
                <tr>
                    <th>#</th>
                    @if (properties != null)
                    {
                        foreach (var prop in properties)
                        {
                            <th>@PropertyHelper.GetDisplayName(prop)</th>
                        }
                    }
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && properties != null)
                {
                    int index = 1;
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@index</td>
                            @foreach (var prop in properties)
                            {
                                <td>@PropertyHelper.GetDisplayValue(item, prop)</td>
                            }
                            <td>
                                <div class="btn-group">
                                    @{
                                        var idProp = item.GetType().GetProperties()
                                        .FirstOrDefault(p => p.Name == "Id" || p.Name.EndsWith("Id"));
                                        var idValue = idProp?.GetValue(item);
                                    }
                                    <a asp-action="Edit" asp-route-id="@idValue" class="btn btn-sm btn-info">
                                        <i class="fa fa-edit"></i> Sửa
                                    </a>
                                    <a asp-action="Details" asp-route-id="@idValue" class="btn btn-sm btn-primary">
                                        <i class="fa fa-eye"></i> Chi tiết
                                    </a>
                                    <a href="javascript:void(0);" class="btn btn-sm btn-danger delete-item" data-id="@idValue">
                                        <i class="fa fa-trash"></i> Xóa
                                    </a>
                                </div>
                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="@(properties?.Count() + 2 ?? 2)" class="text-center">Không có dữ liệu</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            // Xử lý tìm kiếm
            $("#search-btn").click(function () {
                var value = $("#search-box").val().toLowerCase();
                $("#data-table tbody tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            // Xử lý xóa đối tượng
            $(".delete-item").click(function () {
                var id = $(this).data("id");
                if (confirm("Bạn có chắc chắn muốn xóa đối tượng này không?")) {
                    $.ajax({
                        url: '@Url.Action("Delete")/' + id,
                        type: 'POST',
                        data: { "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                        success: function (result) {
                            if (result.success) {
                                alert("Xóa thành công!");
                                location.reload();
                            } else {
                                alert("Xóa thất bại: " + result.message);
                            }
                        },
                        error: function () {
                            alert("Đã xảy ra lỗi khi xóa đối tượng!");
                        }
                    });
                }
            });
        });
    </script>
}
